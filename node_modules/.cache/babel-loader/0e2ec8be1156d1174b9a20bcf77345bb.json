{"remainingRequest":"/Users/danieldickson/Documents/vuex-practice/node_modules/babel-loader/lib/index.js!/Users/danieldickson/Documents/vuex-practice/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danieldickson/Documents/vuex-practice/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieldickson/Documents/vuex-practice/src/components/MenuToggle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danieldickson/Documents/vuex-practice/src/components/MenuToggle.vue","mtime":1571437085703},{"path":"/Users/danieldickson/Documents/vuex-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danieldickson/Documents/vuex-practice/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/danieldickson/Documents/vuex-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danieldickson/Documents/vuex-practice/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport Create from \"./Create\";\nimport Read from \"./Read\";\nimport Update from \"./Update\";\nimport Delete from \"./Delete\";\nexport default {\n  name: 'MenuToggle',\n  components: {\n    Create: Create,\n    Read: Read,\n    Update: Update,\n    Delete: Delete\n  },\n  data: function data() {\n    return {\n      selectedView: 'Create',\n      views: [{\n        title: 'Create',\n        show: true,\n        leftToggle: true,\n        rightToggle: false\n      }, {\n        title: 'Read',\n        show: false,\n        leftToggle: false,\n        rightToggle: false\n      }, {\n        title: 'Update',\n        show: false,\n        leftToggle: false,\n        rightToggle: false\n      }, {\n        title: 'Delete',\n        show: false,\n        leftToggle: false,\n        rightToggle: true\n      }]\n    };\n  },\n  methods: {\n    selectView: function selectView(view) {\n      this.selectedView = view;\n\n      for (var i = 0; i < this.views.length; i++) {\n        if (this.views[i].title == view) {\n          this.views[i].show = true;\n        } else {\n          this.views[i].show = false;\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["MenuToggle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA,OAAA,MAAA;AACA,OAAA,IAAA;AACA,OAAA,MAAA;AACA,OAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA,IAFA;AAGA,IAAA,MAAA,EAAA,MAHA;AAIA,IAAA,MAAA,EAAA;AAJA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,QADA;AAEA,MAAA,KAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,UAAA,EAAA,IAHA;AAIA,QAAA,WAAA,EAAA;AAJA,OADA,EAOA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA,KAFA;AAGA,QAAA,UAAA,EAAA,KAHA;AAIA,QAAA,WAAA,EAAA;AAJA,OAPA,EAaA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA,KAFA;AAGA,QAAA,UAAA,EAAA,KAHA;AAIA,QAAA,WAAA,EAAA;AAJA,OAbA,EAmBA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA,KAFA;AAGA,QAAA,UAAA,EAAA,KAHA;AAIA,QAAA,WAAA,EAAA;AAJA,OAnBA;AAFA,KAAA;AA8BA,GAvCA;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AACA,WAAA,YAAA,GAAA,IAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAA,IAAA,IAAA,EAAA;AACA,eAAA,KAAA,CAAA,CAAA,EAAA,IAAA,GAAA,IAAA;AACA,SAFA,MAEA;AACA,eAAA,KAAA,CAAA,CAAA,EAAA,IAAA,GAAA,KAAA;AACA;AACA;AACA;AAVA;AAxCA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div v-for=\"view in views\" :key=\"view.title\">\n        <div class=\"toggle-button text-center\"\n             :class=\"{'toggle\\-active': view.show,\n                      'left\\-toggle': view.leftToggle,\n                      'right\\-toggle': view.rightToggle}\"\n             @click=\"selectView(view.title)\">\n          {{view.title}}\n        </div>\n      </div>\n    </div>\n    <div class=\"row justify-content-center\">\n      <Create v-if=\"selectedView == 'Create'\"/>\n      <Read v-else-if=\"selectedView == 'Read'\"/>\n      <Update v-else-if=\"selectedView == 'Update'\"/>\n      <Delete v-else-if=\"selectedView == 'Delete'\"/>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport Create from './Create'\nimport Read from './Read'\nimport Update from './Update'\nimport Delete from './Delete'\n\nexport default {\n  name: 'MenuToggle',\n  components: {\n    Create,\n    Read,\n    Update,\n    Delete\n  },\n  data() {\n      return {\n        selectedView: 'Create',\n        views: [\n          {\n            title: 'Create',\n            show: true,\n            leftToggle: true,\n            rightToggle: false\n          },\n          {\n            title: 'Read',\n            show: false,\n            leftToggle: false,\n            rightToggle: false\n          },\n          {\n            title: 'Update',\n            show: false,\n            leftToggle: false,\n            rightToggle: false\n          },\n          {\n            title: 'Delete',\n            show: false,\n            leftToggle: false,\n            rightToggle: true\n          }\n        ]\n\n      }\n  },\n  methods: {\n    selectView(view) {\n      this.selectedView = view;\n      for (let i = 0; i < this.views.length; i++) {\n        if (this.views[i].title == view) {\n          this.views[i].show = true;\n        } else {\n          this.views[i].show = false;\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.toggle-button {\n  cursor: pointer;\n  color: white;\n  background-color: rgb(177, 177, 177);\n  width: 80px;\n  height: 45px;\n  line-height: 45px;\n  font-size: 18px;\n}\n\n.toggle-button:hover {\n  background-color: rgba(177, 177, 177, 0.596);\n}\n\n.toggle-active, .toggle-active:hover {\n  background-color: #464646;\n}\n\n.left-toggle {\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n\n.right-toggle {\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n</style>"],"sourceRoot":"src/components"}]}