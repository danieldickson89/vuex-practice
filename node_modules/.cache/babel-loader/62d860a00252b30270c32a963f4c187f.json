{"remainingRequest":"/Users/danieldickson/git/vuex-practice/node_modules/babel-loader/lib/index.js!/Users/danieldickson/git/vuex-practice/node_modules/eslint-loader/index.js??ref--13-0!/Users/danieldickson/git/vuex-practice/src/store.js","dependencies":[{"path":"/Users/danieldickson/git/vuex-practice/src/store.js","mtime":1571179288553},{"path":"/Users/danieldickson/git/vuex-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danieldickson/git/vuex-practice/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/danieldickson/git/vuex-practice/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/danieldickson/git/vuex-practice/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/danieldickson/git/vuex-practice/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.sort\";\nimport Vue from 'vue';\nimport Vuex from 'vuex'; // Axios import\n\nimport axios from 'axios';\nVue.use(Vuex);\nexport var action_addStudent = 'addStudent';\nexport var action_loadStudents = 'loadStudents';\nexport var action_updateStudent = 'updateStudent';\nexport var action_deleteStudent = 'deleteStudent';\nexport default new Vuex.Store({\n  state: {\n    students: []\n  },\n  mutations: {\n    addStudent: function addStudent(state, student) {\n      state.students.push(student);\n    },\n    loadStudents: function loadStudents(state, students) {\n      state.students = students;\n    },\n    updateStudent: function updateStudent(state, student) {\n      state.students = [student].concat(_toConsumableArray(state.students.filter(function (s) {\n        return s.id != student.id;\n      }))).sort(function (a, b) {\n        return a.id - b.id;\n      });\n    },\n    deleteStudent: function deleteStudent(state, student) {\n      state.students = _toConsumableArray(state.students.filter(function (s) {\n        return s.id != student.id;\n      }));\n    }\n  },\n  actions: {\n    addStudent: function () {\n      var _addStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref, newStudent) {\n        var commit, student;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return axios.post('http://localhost:3000/students', newStudent);\n\n              case 3:\n                student = _context.sent.data;\n                commit(action_addStudent, student);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function addStudent(_x, _x2) {\n        return _addStudent.apply(this, arguments);\n      }\n\n      return addStudent;\n    }(),\n    loadStudents: function () {\n      var _loadStudents = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref2) {\n        var commit, students;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                _context2.next = 3;\n                return axios.get('http://localhost:3000/students');\n\n              case 3:\n                students = _context2.sent.data;\n                commit(action_loadStudents, students);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadStudents(_x3) {\n        return _loadStudents.apply(this, arguments);\n      }\n\n      return loadStudents;\n    }(),\n    updateStudent: function () {\n      var _updateStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_ref3, student) {\n        var commit, studentToUpdate;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref3.commit;\n                _context3.next = 3;\n                return axios.put(\"http://localhost:3000/students/\".concat(student.id), student);\n\n              case 3:\n                studentToUpdate = _context3.sent.data;\n                commit(action_updateStudent, studentToUpdate);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function updateStudent(_x4, _x5) {\n        return _updateStudent.apply(this, arguments);\n      }\n\n      return updateStudent;\n    }(),\n    deleteStudent: function () {\n      var _deleteStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(_ref4, student) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref4.commit;\n                _context4.next = 3;\n                return axios.delete(\"http://localhost:3000/students/\".concat(student.id));\n\n              case 3:\n                commit(action_deleteStudent, student);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function deleteStudent(_x6, _x7) {\n        return _deleteStudent.apply(this, arguments);\n      }\n\n      return deleteStudent;\n    }()\n  }\n});",{"version":3,"sources":["/Users/danieldickson/git/vuex-practice/src/store.js"],"names":["Vue","Vuex","axios","use","action_addStudent","action_loadStudents","action_updateStudent","action_deleteStudent","Store","state","students","mutations","addStudent","student","push","loadStudents","updateStudent","filter","s","id","sort","a","b","deleteStudent","actions","newStudent","commit","post","data","get","put","studentToUpdate","delete"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\n// Axios import\nimport axios from 'axios';\n\nVue.use(Vuex)\n\nexport const action_addStudent = 'addStudent';\nexport const action_loadStudents = 'loadStudents';\nexport const action_updateStudent = 'updateStudent';\nexport const action_deleteStudent = 'deleteStudent';\n\nexport default new Vuex.Store({\n    state: {\n        students: []\n    },\n    mutations: {\n        addStudent: (state, student) => {\n            state.students.push(student);\n        },\n        loadStudents: (state, students) => {\n            state.students = students;\n        },\n        updateStudent: (state, student) => {\n            state.students = [student, ...state.students.filter(s => s.id != student.id)].sort((a, b) => a.id - b.id);\n        },\n        deleteStudent: (state, student) => {\n            state.students = [...state.students.filter(s => s.id != student.id)];\n        }\n    },\n    actions: {\n        async addStudent({commit}, newStudent) {\n            let student = (await axios.post('http://localhost:3000/students', newStudent)).data;\n\n            commit(action_addStudent, student)\n        },\n        async loadStudents({commit}) {\n            let students = (await axios.get('http://localhost:3000/students')).data;\n\n            commit(action_loadStudents, students)\n        },\n        async updateStudent({commit}, student) {\n            let studentToUpdate = (await axios.put(`http://localhost:3000/students/${student.id}`, student)).data;\n\n            commit(action_updateStudent, studentToUpdate)\n        },\n        async deleteStudent({commit}, student) {\n            await axios.delete(`http://localhost:3000/students/${student.id}`);\n\n            commit(action_deleteStudent, student)\n        }\n    }\n})\n"]}]}