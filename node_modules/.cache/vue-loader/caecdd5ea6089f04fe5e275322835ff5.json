{"remainingRequest":"/Users/danieldickson/Documents/vuex-practice/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieldickson/Documents/vuex-practice/src/components/Delete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danieldickson/Documents/vuex-practice/src/components/Delete.vue","mtime":1571437779538},{"path":"/Users/danieldickson/Documents/vuex-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danieldickson/Documents/vuex-practice/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/danieldickson/Documents/vuex-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danieldickson/Documents/vuex-practice/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport {action_updateStudent, action_deleteStudent} from '../store'\n\nexport default {\n  name: 'Delete',\n  data() {\n      return {\n      }\n  },\n  computed: {\n      students() {\n          return this.$store.state.students;\n      }\n  },\n  methods: {\n      deleteStudent(student) {\n          this.$store.dispatch(action_deleteStudent, student);\n      }\n  }\n}\n",{"version":3,"sources":["Delete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Delete.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-for=\"student in students\" :key=\"student.id\" class=\"row justify-content-center mt-3 mb-2\"> \n        <div class=\"col-1\"></div>\n        <div class=\"col-5 text-right\">{{student.name}}</div>\n        <div class=\"btn btn-danger my-button\" @click=\"deleteStudent(student)\">\n            <font-awesome-icon icon=\"trash\"/>\n        </div>\n        <div class=\"col-5\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {action_updateStudent, action_deleteStudent} from '../store'\n\nexport default {\n  name: 'Delete',\n  data() {\n      return {\n      }\n  },\n  computed: {\n      students() {\n          return this.$store.state.students;\n      }\n  },\n  methods: {\n      deleteStudent(student) {\n          this.$store.dispatch(action_deleteStudent, student);\n      }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}